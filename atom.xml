<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sinux</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-01-05T10:24:13.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Sinux</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2016 年书单</title>
    <link href="http://yoursite.com/2017/01/05/2016_book_list/"/>
    <id>http://yoursite.com/2017/01/05/2016_book_list/</id>
    <published>2017-01-05T15:46:16.000Z</published>
    <updated>2017-01-05T10:24:13.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li><p><strong>《白夜行》</strong>年初在豆瓣阅读看的，算是对之前纸质书的填坑吧，构思无懈可击，看完一身冷汗，可是冷静之后，在道德上还是无法接受两位主角的行径。</p>
</li>
<li><p><strong>《The Journey of Man: A Genetic Odyssey》</strong> 关于你我的祖先，收不到任何原版书，最后泛读了一下网上盗印的 pdf 。</p>
</li>
<li><p><strong>《公正》</strong> 这本书会教人轻易看穿那些从狭隘角度出发强行安利伪公正还自以为是的选手们。</p>
</li>
<li><p><strong>《小顾聊绘画·壹》《小顾聊绘画·贰》</strong> 穿蓝裙绿袜站立的女孩 和 戴珍珠耳环的少女。</p>
</li>
<li><p><strong>《高性能Linux服务器构建实战 : 系统安全、故障排查、自动化运维与集群架构》</strong> 腊鸡。</p>
</li>
<li><p><strong>《年少荒唐》</strong> 被青海湖那段感动哭了，很遗憾，书中夹了一部分知乎答案和不明就里的文章。</p>
</li>
<li><p><strong>《400次 : 女生必看的大姨妈圣经》</strong> This is what you really love, my young man, but you do not love beauty for its own sake.</p>
</li>
<li><p><strong>《月亮和六便士》</strong> 聪明人不会把自己放置在一个对自己不利的局面中，无论环境是什么样的。</p>
</li>
<li><p><strong>《黑客与画家 : 硅谷创业之父Paul Graham文集》</strong> 冲着名气和有人说作者在书中推荐 Lisp 而来，然而大部分内容很让人失望，完全对不上名气。</p>
</li>
<li><p><strong>《乌合之众 : 大众心理研究》</strong></p>
</li>
<li><p><strong>《男人这东西》</strong> 再考虑《金阁寺》中的一些场景，让我感觉所有日本男人的想法都很古怪。</p>
</li>
<li><p><strong>《MacTalk 人生元编程》</strong> 腊鸡。</p>
</li>
<li><p><strong>《十八岁给我一个姑娘》</strong> 除非那些场面都是真实存在的，否则能正常描写却用脏话贯穿只会让人感觉恶心。</p>
</li>
<li><p><strong>《阿尔萨斯：巫妖王的崛起》</strong> 一生挚爱的游戏。</p>
</li>
<li><p><strong>《分成两半的子爵》《不存在的骑士》</strong> 很可惜《树上的男爵》只看了前几章，后来偶然发现卡尔维诺中文站和很多短文都是阮一峰翻译的，厉害。</p>
</li>
<li><p><strong>《手冲一杯好咖啡》</strong> 科普小读物，配图也很可爱，5分钟就能读完啦。</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;《白夜行》&lt;/strong&gt;年初在豆瓣阅读看的，算是对之前纸质书的填坑吧，构思无懈可击，看完一身冷汗，可是冷静之后，在道德上还是无法接受两位主角的行径。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;《The Journey of Ma
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Implement &quot;or&quot; operator in Elasticsearch</title>
    <link href="http://yoursite.com/2016/11/16/implement_or_operator_in_elasticsearch/"/>
    <id>http://yoursite.com/2016/11/16/implement_or_operator_in_elasticsearch/</id>
    <published>2016-11-16T07:46:16.000Z</published>
    <updated>2016-11-24T06:57:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>以下内容基于 Elasticsearch 2.0.1 。</p>
<p>首先是 <code>or filter</code> 已经变成了 <code>bool</code> ，它是专门用来合并 queries ，支持 or、and、not 这类操作符的，大概相当于 <code>()</code>(?).</p>
<ul>
<li><code>bool</code> 中的 <code>must</code> 就等于 SQL 中的 <code>AND</code></li>
<li>而 <code>should</code> 就相当于 SQL 中的 <code>OR</code></li>
<li><code>terms</code> 用来 match 任一出现在 simple type array (not object) 中的 doc</li>
</ul>
<p>当然还涉及到搜索结果评分等，但是这里不提这些。</p>
<p>现在遇到的情景大概就是想搜索多个空格分隔的关键字，任何一个 field 满足任一个关键字则匹配成功，返回所有匹配成功的结果和它们的 highlight 字段。</p>
<p>首先是对搜索内容做一点微不足道的处理:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="keyword">const</span> queries = <span class="string">'some keywords'</span>.trim().split(<span class="regexp">/\s+/</span>).map(<span class="function">(<span class="params">query</span>) =&gt;</span> query.lowerCase());</div><div class="line"><span class="keyword">const</span> queryString = queries.join(<span class="string">' OR '</span>);</div></pre></td></tr></table></figure>
<p>保持所有 query 包裹在 bool 中，把上面的两个变量用在 POST body 中，curl 同理:</p>
<figure class="highlight"><table><tr><td class="code"><pre><div class="line">&#123;</div><div class="line">    "index": "index",</div><div class="line">    "from": 11,</div><div class="line">    "size": 20,</div><div class="line">    "_source": false,</div><div class="line">    "body": &#123;</div><div class="line">        "query": &#123;</div><div class="line">            "bool": &#123;</div><div class="line">            "should": [</div><div class="line">                &#123;</div><div class="line">                    "terms": &#123;</div><div class="line">                        "tags": queries,</div><div class="line">                    &#125;,</div><div class="line">                &#125;,</div><div class="line">                &#123;</div><div class="line">                    "query_string": &#123;</div><div class="line">                        "query": queryString,</div><div class="line">                        "fields": ["name^5", "name.analyzed^5", "email", "phone", "content"],</div><div class="line">                        "analyzer": "whitespace",</div><div class="line">                    &#125;,</div><div class="line">                &#125;,</div><div class="line">            ],</div><div class="line">            "minimum_should_match": 1,</div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        "highlight": &#123;</div><div class="line">            "fields": &#123;</div><div class="line">                "content": &#123; fragment_size: 18, number_of_fragments: 1 &#125;,</div><div class="line">                "name: &#123;&#125;,</div><div class="line">                "name.analyzed": &#123;&#125;,</div><div class="line">                "tags": &#123;&#125;,</div><div class="line">                "email": &#123;&#125;,</div><div class="line">                "phone": &#123;&#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>note: <code>minimum_should_match</code> may not be available in some version of elasticsearch.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容基于 Elasticsearch 2.0.1 。&lt;/p&gt;
&lt;p&gt;首先是 &lt;code&gt;or filter&lt;/code&gt; 已经变成了 &lt;code&gt;bool&lt;/code&gt; ，它是专门用来合并 queries ，支持 or、and、not 这类操作符的，大概相当于 &lt;cod
    
    </summary>
    
    
  </entry>
  
</feed>
